#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

print_info() {
    echo -e "${BLUE}[i]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë         JVM Performance Monitoring Stack              ‚ïë"
echo "‚ïë                                                        ‚ïë"
echo "‚ïë  Java App + JMX + Prometheus + Grafana                ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker Compose
if ! command -v docker-compose &> /dev/null; then
    print_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose: https://docs.docker.com/compose/install/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Kotlin
if ! command -v kotlinc &> /dev/null; then
    print_warning "Kotlin –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞—é—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ brew..."

    if command -v brew &> /dev/null; then
        brew install kotlin
        if [ $? -eq 0 ]; then
            print_status "Kotlin —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Kotlin"
            exit 1
        fi
    else
        print_error "Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Kotlin –≤—Ä—É—á–Ω—É—é:"
        echo "brew install kotlin"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è JAR —Ñ–∞–π–ª–∞
if [ ! -f "PerformanceTestApp.jar" ]; then
    print_info "JAR —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–º–ø–∏–ª–∏—Ä—É—é..."

    if [ -f "PerformanceTestApp.kt" ]; then
        kotlinc PerformanceTestApp.kt -include-runtime -d PerformanceTestApp.jar

        if [ $? -eq 0 ]; then
            print_status "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–æ"
        else
            print_error "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"
            exit 1
        fi
    else
        print_error "–§–∞–π–ª PerformanceTestApp.kt –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
else
    print_status "JAR —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down 2>/dev/null

# –ó–∞–ø—É—Å–∫ —Å—Ç–µ–∫–∞
print_info "–ó–∞–ø—É—Å–∫–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫..."
docker-compose up -d

if [ $? -eq 0 ]; then
    print_status "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"

    echo ""
    echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""

    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 5

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo -e "${BLUE}–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
    docker-compose ps

    echo ""
    echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–µ
    echo -e "${GREEN}üöÄ –°–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:${NC}"
    echo ""
    echo -e "  ${BLUE}üìä Grafana:${NC}      http://localhost:3000"
    echo -e "                      Login: ${YELLOW}admin / admin${NC}"
    echo ""
    echo -e "  ${BLUE}üìà –î–∞—à–±–æ—Ä–¥—ã:${NC}"
    echo -e "     ‚Ä¢ –ë–∞–∑–æ–≤—ã–π (5 –ø–∞–Ω–µ–ª–µ–π):  http://localhost:3000/d/jvm-monitoring/jvm-performance-monitoring"
    echo -e "     ‚Ä¢ –ü–æ–ª–Ω—ã–π (13 –ø–∞–Ω–µ–ª–µ–π):  http://localhost:3000/d/jvm-complete/jvm-complete-monitoring"
    echo ""
    echo -e "  ${BLUE}üîç Prometheus:${NC}   http://localhost:9090"
    echo ""
    echo -e "  ${BLUE}üì° JMX Metrics:${NC}  http://localhost:9404/metrics"
    echo ""
    echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""

    # –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    echo -e "${YELLOW}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo ""
    echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    echo "    docker-compose logs -f performance-app"
    echo ""
    echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    echo "    docker-compose restart performance-app"
    echo ""
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
    echo "    docker-compose down"
    echo ""
    echo "  –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è volumes):"
    echo "    docker-compose down -v"
    echo ""

    # –û–ø—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
    if command -v open &> /dev/null; then
        echo -e "${GREEN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
        echo ""
        echo -e "${YELLOW}–ö–∞–∫–æ–π –¥–∞—à–±–æ—Ä–¥ –æ—Ç–∫—Ä—ã—Ç—å?${NC}"
        echo "  1) –ü–æ–ª–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ (13 –ø–∞–Ω–µ–ª–µ–π) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è"
        echo "  2) –ë–∞–∑–æ–≤—ã–π –¥–∞—à–±–æ—Ä–¥ (5 –ø–∞–Ω–µ–ª–µ–π)"
        echo "  3) –ì–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Grafana"
        echo "  4) –ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å"
        echo ""
        read -p "–í–∞—à –≤—ã–±–æ—Ä (1-4): " choice

        case $choice in
            1)
                sleep 3  # –î–∞–µ–º –≤—Ä–µ–º—è Grafana –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
                open "http://localhost:3000/d/jvm-complete/jvm-complete-monitoring"
                print_status "–û—Ç–∫—Ä—ã—Ç –ø–æ–ª–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ JVM –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
                ;;
            2)
                sleep 3
                open "http://localhost:3000/d/jvm-monitoring/jvm-performance-monitoring"
                print_status "–û—Ç–∫—Ä—ã—Ç –±–∞–∑–æ–≤—ã–π –¥–∞—à–±–æ—Ä–¥ JVM –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
                ;;
            3)
                sleep 3
                open "http://localhost:3000"
                print_status "–û—Ç–∫—Ä—ã—Ç–∞ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Grafana"
                ;;
            4)
                print_info "–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è"
                ;;
            *)
                # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –¥–∞—à–±–æ—Ä–¥
                sleep 3
                open "http://localhost:3000/d/jvm-complete/jvm-complete-monitoring"
                print_status "–û—Ç–∫—Ä—ã—Ç –ø–æ–ª–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ JVM –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
                ;;
        esac
    fi

else
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Docker Compose"
    exit 1
fi

echo ""
print_status "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"